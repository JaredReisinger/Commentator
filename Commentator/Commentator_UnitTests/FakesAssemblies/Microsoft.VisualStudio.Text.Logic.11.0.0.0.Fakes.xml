<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.Text.Logic.11.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.ChangeSpanGet">
            <summary>Sets the shim of ClassificationChangedEventArgs.get_ChangeSpan()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.ConstructorSnapshotSpan">
            <summary>Sets the shim of ClassificationChangedEventArgs.ClassificationChangedEventArgs(SnapshotSpan changeSpan)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationChangedEventArgs.AllInstances.ChangeSpanGet">
            <summary>Sets the shim of ClassificationChangedEventArgs.get_ChangeSpan()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan">
            <summary>Shim type of Microsoft.VisualStudio.Text.Classification.ClassificationSpan</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.#ctor(Microsoft.VisualStudio.Text.Classification.ClassificationSpan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.ClassificationTypeGet">
            <summary>Sets the shim of ClassificationSpan.get_ClassificationType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.ConstructorSnapshotSpanIClassificationType">
            <summary>Sets the shim of ClassificationSpan.ClassificationSpan(SnapshotSpan span, IClassificationType classification)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.SpanGet">
            <summary>Sets the shim of ClassificationSpan.get_Span()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.AllInstances.ClassificationTypeGet">
            <summary>Sets the shim of ClassificationSpan.get_ClassificationType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationSpan.AllInstances.SpanGet">
            <summary>Sets the shim of ClassificationSpan.get_Span()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute">
            <summary>Shim type of Microsoft.VisualStudio.Text.Classification.ClassificationTypeAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.#ctor(Microsoft.VisualStudio.Text.Classification.ClassificationTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.ClassificationTypeNamesGet">
            <summary>Sets the shim of ClassificationTypeAttribute.get_ClassificationTypeNames()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.ClassificationTypeNamesSetString">
            <summary>Sets the shim of ClassificationTypeAttribute.set_ClassificationTypeNames(String value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.Constructor">
            <summary>Sets the shim of ClassificationTypeAttribute.ClassificationTypeAttribute()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.AllInstances.ClassificationTypeNamesGet">
            <summary>Sets the shim of ClassificationTypeAttribute.get_ClassificationTypeNames()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeAttribute.AllInstances.ClassificationTypeNamesSetString">
            <summary>Sets the shim of ClassificationTypeAttribute.set_ClassificationTypeNames(String value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition">
            <summary>Shim type of Microsoft.VisualStudio.Text.Classification.ClassificationTypeDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.#ctor(Microsoft.VisualStudio.Text.Classification.ClassificationTypeDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.Constructor">
            <summary>Sets the shim of ClassificationTypeDefinition.ClassificationTypeDefinition()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.ShimClassificationTypeDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationChangedEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.ClassificationChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubClassificationChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationSpan">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.ClassificationSpan</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationSpan.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.Classification.IClassificationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationSpan.InitializeStub">
            <summary>Initializes a new instance of type StubClassificationSpan</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationSpan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationSpan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubClassificationSpan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.IClassificationType</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.#ctor">
            <summary>Initializes a new instance of type StubIClassificationType</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.BaseTypesGet">
            <summary>Sets the stub of IClassificationType.get_BaseTypes()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.ClassificationGet">
            <summary>Sets the stub of IClassificationType.get_Classification()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.IsOfTypeString">
            <summary>Sets the stub of IClassificationType.IsOfType(String type)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationType#IsOfType(System.String)">
            <summary>Sets the stub of IClassificationType.IsOfType(String type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationType#BaseTypes">
            <summary>Sets the stub of IClassificationType.get_BaseTypes()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationType.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationType#Classification">
            <summary>Sets the stub of IClassificationType.get_Classification()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.IClassificationTypeRegistryService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.#ctor">
            <summary>Initializes a new instance of type StubIClassificationTypeRegistryService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.CreateClassificationTypeStringIEnumerableOfIClassificationType">
            <summary>Sets the stub of IClassificationTypeRegistryService.CreateClassificationType(String type, IEnumerable`1&lt;IClassificationType&gt; baseTypes)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.CreateTransientClassificationTypeIClassificationTypeArray">
            <summary>Sets the stub of IClassificationTypeRegistryService.CreateTransientClassificationType(IClassificationType[] baseTypes)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.CreateTransientClassificationTypeIEnumerableOfIClassificationType">
            <summary>Sets the stub of IClassificationTypeRegistryService.CreateTransientClassificationType(IEnumerable`1&lt;IClassificationType&gt; baseTypes)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.GetClassificationTypeString">
            <summary>Sets the stub of IClassificationTypeRegistryService.GetClassificationType(String type)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationTypeRegistryService#CreateClassificationType(System.String,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.Classification.IClassificationType})">
            <summary>Sets the stub of IClassificationTypeRegistryService.CreateClassificationType(String type, IEnumerable`1&lt;IClassificationType&gt; baseTypes)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationTypeRegistryService#CreateTransientClassificationType(Microsoft.VisualStudio.Text.Classification.IClassificationType[])">
            <summary>Sets the stub of IClassificationTypeRegistryService.CreateTransientClassificationType(IClassificationType[] baseTypes)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationTypeRegistryService#CreateTransientClassificationType(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.Classification.IClassificationType})">
            <summary>Sets the stub of IClassificationTypeRegistryService.CreateTransientClassificationType(IEnumerable`1&lt;IClassificationType&gt; baseTypes)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassificationTypeRegistryService.mvstl::Microsoft#VisualStudio#Text#Classification#IClassificationTypeRegistryService#GetClassificationType(System.String)">
            <summary>Sets the stub of IClassificationTypeRegistryService.GetClassificationType(String type)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifier">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.IClassifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifier.#ctor">
            <summary>Initializes a new instance of type StubIClassifier</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifier.GetClassificationSpansSnapshotSpan">
            <summary>Sets the stub of IClassifier.GetClassificationSpans(SnapshotSpan span)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifier.mvstl::Microsoft#VisualStudio#Text#Classification#IClassifier#GetClassificationSpans(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Sets the stub of IClassifier.GetClassificationSpans(SnapshotSpan span)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierAggregatorService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.IClassifierAggregatorService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierAggregatorService.#ctor">
            <summary>Initializes a new instance of type StubIClassifierAggregatorService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierAggregatorService.GetClassifierITextBuffer">
            <summary>Sets the stub of IClassifierAggregatorService.GetClassifier(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierAggregatorService.mvstl::Microsoft#VisualStudio#Text#Classification#IClassifierAggregatorService#GetClassifier(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of IClassifierAggregatorService.GetClassifier(ITextBuffer textBuffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierProvider">
            <summary>Stub type of Microsoft.VisualStudio.Text.Classification.IClassifierProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierProvider.#ctor">
            <summary>Initializes a new instance of type StubIClassifierProvider</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierProvider.GetClassifierITextBuffer">
            <summary>Sets the stub of IClassifierProvider.GetClassifier(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Classification.Fakes.StubIClassifierProvider.mvstl::Microsoft#VisualStudio#Text#Classification#IClassifierProvider#GetClassifier(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of IClassifierProvider.GetClassifier(ITextBuffer textBuffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Differencing.DifferenceBufferOption`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.#ctor(Microsoft.VisualStudio.Text.Differencing.DifferenceBufferOption{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.Constructor">
            <summary>Sets the shim of DifferenceBufferOption`1.DifferenceBufferOption`1()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the shim of DifferenceBufferOption`1.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOption`1.AllInstances.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the shim of DifferenceBufferOption`1.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOptions">
            <summary>Shim type of Microsoft.VisualStudio.Text.Differencing.DifferenceBufferOptions</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimDifferenceBufferOptions.StaticConstructor">
            <summary>Sets the shim of DifferenceBufferOptions.DifferenceBufferOptions()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Differencing.SnapshotDifferenceChangeEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.#ctor(Microsoft.VisualStudio.Text.Differencing.SnapshotDifferenceChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AfterGet">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.get_After()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AfterSetISnapshotDifference">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.set_After(ISnapshotDifference value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.BeforeGet">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.get_Before()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.BeforeSetISnapshotDifference">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.set_Before(ISnapshotDifference value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.ConstructorISnapshotDifferenceISnapshotDifference">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.SnapshotDifferenceChangeEventArgs(ISnapshotDifference before, ISnapshotDifference after)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AllInstances.AfterGet">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.get_After()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AllInstances.AfterSetISnapshotDifference">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.set_After(ISnapshotDifference value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AllInstances.BeforeGet">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.get_Before()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.ShimSnapshotDifferenceChangeEventArgs.AllInstances.BeforeSetISnapshotDifference">
            <summary>Sets the shim of SnapshotDifferenceChangeEventArgs.set_Before(ISnapshotDifference value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Differencing.DifferenceBufferOption`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.DefaultGet">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Default()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.Equals(System.Object)">
            <summary>Sets the stub of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.EqualsObject">
            <summary>Sets the stub of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.GetHashCode">
            <summary>Sets the stub of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.GetHashCode01">
            <summary>Sets the stub of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.InitializeStub">
            <summary>Initializes a new instance of type StubDifferenceBufferOption</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.IsApplicableToScope(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
            <summary>Sets the stub of DifferenceBufferOption`1.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the stub of DifferenceBufferOption`1.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.IsValid(`0@)">
            <summary>Sets the stub of EditorOptionDefinition`1.IsValid(!0&amp; proposedValue)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.IsValidT0Ref">
            <summary>Sets the stub of EditorOptionDefinition`1.IsValid(!0&amp; proposedValue)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.KeyGet">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Key()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.Default">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubDifferenceBufferOption`1.Key">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer">
            <summary>Stub type of Microsoft.VisualStudio.Text.Differencing.IDifferenceBuffer</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.#ctor">
            <summary>Initializes a new instance of type StubIDifferenceBuffer</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.AddIgnoreDifferencePredicateIgnoreDifferencePredicate">
            <summary>Sets the stub of IDifferenceBuffer.AddIgnoreDifferencePredicate(IgnoreDifferencePredicate predicate)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.AddSnapshotLineTransformSnapshotLineTransform">
            <summary>Sets the stub of IDifferenceBuffer.AddSnapshotLineTransform(SnapshotLineTransform transform)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.AttachBackingFieldToDifferenceOptions">
            <summary>Attaches delegates to emulate StubIDifferenceBuffer.DifferenceOptions as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.BaseLeftBufferGet">
            <summary>Sets the stub of IDifferenceBuffer.get_BaseLeftBuffer()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.BaseRightBufferGet">
            <summary>Sets the stub of IDifferenceBuffer.get_BaseRightBuffer()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.CurrentInlineBufferSnapshotGet">
            <summary>Sets the stub of IDifferenceBuffer.get_CurrentInlineBufferSnapshot()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.CurrentSnapshotDifferenceGet">
            <summary>Sets the stub of IDifferenceBuffer.get_CurrentSnapshotDifference()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.DifferenceOptionsGet">
            <summary>Sets the stub of IDifferenceBuffer.get_DifferenceOptions()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.DifferenceOptionsSetStringDifferenceOptions">
            <summary>Sets the stub of IDifferenceBuffer.set_DifferenceOptions(StringDifferenceOptions value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.InlineBufferGet">
            <summary>Sets the stub of IDifferenceBuffer.get_InlineBuffer()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.IsEditingDisabledGet">
            <summary>Sets the stub of IDifferenceBuffer.get_IsEditingDisabled()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.LeftBufferGet">
            <summary>Sets the stub of IDifferenceBuffer.get_LeftBuffer()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#AddIgnoreDifferencePredicate(Microsoft.VisualStudio.Text.Differencing.IgnoreDifferencePredicate)">
            <summary>Sets the stub of IDifferenceBuffer.AddIgnoreDifferencePredicate(IgnoreDifferencePredicate predicate)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#AddSnapshotLineTransform(Microsoft.VisualStudio.Text.Differencing.SnapshotLineTransform)">
            <summary>Sets the stub of IDifferenceBuffer.AddSnapshotLineTransform(SnapshotLineTransform transform)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#RemoveIgnoreDifferencePredicate(Microsoft.VisualStudio.Text.Differencing.IgnoreDifferencePredicate)">
            <summary>Sets the stub of IDifferenceBuffer.RemoveIgnoreDifferencePredicate(IgnoreDifferencePredicate predicate)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#RemoveSnapshotLineTransform(Microsoft.VisualStudio.Text.Differencing.SnapshotLineTransform)">
            <summary>Sets the stub of IDifferenceBuffer.RemoveSnapshotLineTransform(SnapshotLineTransform transform)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.OptionsGet">
            <summary>Sets the stub of IDifferenceBuffer.get_Options()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.PropertiesGet">
            <summary>Sets the stub of IPropertyOwner.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.RemoveIgnoreDifferencePredicateIgnoreDifferencePredicate">
            <summary>Sets the stub of IDifferenceBuffer.RemoveIgnoreDifferencePredicate(IgnoreDifferencePredicate predicate)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.RemoveSnapshotLineTransformSnapshotLineTransform">
            <summary>Sets the stub of IDifferenceBuffer.RemoveSnapshotLineTransform(SnapshotLineTransform transform)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.RightBufferGet">
            <summary>Sets the stub of IDifferenceBuffer.get_RightBuffer()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#BaseLeftBuffer">
            <summary>Sets the stub of IDifferenceBuffer.get_BaseLeftBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#BaseRightBuffer">
            <summary>Sets the stub of IDifferenceBuffer.get_BaseRightBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#CurrentInlineBufferSnapshot">
            <summary>Sets the stub of IDifferenceBuffer.get_CurrentInlineBufferSnapshot()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#CurrentSnapshotDifference">
            <summary>Sets the stub of IDifferenceBuffer.get_CurrentSnapshotDifference()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#DifferenceOptions">
            <summary>Sets the stub of IDifferenceBuffer.get_DifferenceOptions()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#InlineBuffer">
            <summary>Sets the stub of IDifferenceBuffer.get_InlineBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#IsEditingDisabled">
            <summary>Sets the stub of IDifferenceBuffer.get_IsEditingDisabled()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#LeftBuffer">
            <summary>Sets the stub of IDifferenceBuffer.get_LeftBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#Options">
            <summary>Sets the stub of IDifferenceBuffer.get_Options()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvscu::Microsoft#VisualStudio#Utilities#IPropertyOwner#Properties">
            <summary>Sets the stub of IPropertyOwner.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBuffer.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBuffer#RightBuffer">
            <summary>Sets the stub of IDifferenceBuffer.get_RightBuffer()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Differencing.IDifferenceBufferFactoryService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.#ctor">
            <summary>Initializes a new instance of type StubIDifferenceBufferFactoryService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.CreateDifferenceBufferITextBufferITextBuffer">
            <summary>Sets the stub of IDifferenceBufferFactoryService.CreateDifferenceBuffer(ITextBuffer leftBaseBuffer, ITextBuffer rightBaseBuffer)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.CreateDifferenceBufferITextBufferITextBufferStringDifferenceOptionsBooleanBooleanBoolean">
            <summary>Sets the stub of IDifferenceBufferFactoryService.CreateDifferenceBuffer(ITextBuffer leftBaseBuffer, ITextBuffer rightBaseBuffer, StringDifferenceOptions options, Boolean disableEditing, Boolean wrapLeftBuffer, Boolean wrapRightBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBufferFactoryService#CreateDifferenceBuffer(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of IDifferenceBufferFactoryService.CreateDifferenceBuffer(ITextBuffer leftBaseBuffer, ITextBuffer rightBaseBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBufferFactoryService#CreateDifferenceBuffer(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Differencing.StringDifferenceOptions,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IDifferenceBufferFactoryService.CreateDifferenceBuffer(ITextBuffer leftBaseBuffer, ITextBuffer rightBaseBuffer, StringDifferenceOptions options, Boolean disableEditing, Boolean wrapLeftBuffer, Boolean wrapRightBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceBufferFactoryService#TryGetDifferenceBuffer(Microsoft.VisualStudio.Text.Projection.IProjectionBufferBase)">
            <summary>Sets the stub of IDifferenceBufferFactoryService.TryGetDifferenceBuffer(IProjectionBufferBase projectionBuffer)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceBufferFactoryService.TryGetDifferenceBufferIProjectionBufferBase">
            <summary>Sets the stub of IDifferenceBufferFactoryService.TryGetDifferenceBuffer(IProjectionBufferBase projectionBuffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection">
            <summary>Stub type of Microsoft.VisualStudio.Text.Differencing.IDifferenceTrackingSpanCollection</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.#ctor">
            <summary>Initializes a new instance of type StubIDifferenceTrackingSpanCollection</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.AddedLineSpansGet">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_AddedLineSpans()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.AddedWordSpansGet">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_AddedWordSpans()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.RemovedLineSpansGet">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_RemovedLineSpans()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.RemovedWordSpansGet">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_RemovedWordSpans()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceTrackingSpanCollection#AddedLineSpans">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_AddedLineSpans()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceTrackingSpanCollection#AddedWordSpans">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_AddedWordSpans()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceTrackingSpanCollection#RemovedLineSpans">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_RemovedLineSpans()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubIDifferenceTrackingSpanCollection.mvstl::Microsoft#VisualStudio#Text#Differencing#IDifferenceTrackingSpanCollection#RemovedWordSpans">
            <summary>Sets the stub of IDifferenceTrackingSpanCollection.get_RemovedWordSpans()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference">
            <summary>Stub type of Microsoft.VisualStudio.Text.Differencing.ISnapshotDifference</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.#ctor">
            <summary>Initializes a new instance of type StubISnapshotDifference</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.DifferenceBufferGet">
            <summary>Sets the stub of ISnapshotDifference.get_DifferenceBuffer()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.DifferenceOptionsGet">
            <summary>Sets the stub of ISnapshotDifference.get_DifferenceOptions()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.DifferenceSpansGet">
            <summary>Sets the stub of ISnapshotDifference.get_DifferenceSpans()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.FindMatchOrDifferenceSnapshotPointMatchOutDifferenceOut">
            <summary>Sets the stub of ISnapshotDifference.FindMatchOrDifference(SnapshotPoint point, Match&amp; match, Difference&amp; difference)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.IgnoreDifferencePredicatesGet">
            <summary>Sets the stub of ISnapshotDifference.get_IgnoreDifferencePredicates()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.InlineBufferSnapshotGet">
            <summary>Sets the stub of ISnapshotDifference.get_InlineBufferSnapshot()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.LeftBufferSnapshotGet">
            <summary>Sets the stub of ISnapshotDifference.get_LeftBufferSnapshot()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.LineDifferencesGet">
            <summary>Sets the stub of ISnapshotDifference.get_LineDifferences()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.MapToInlineSnapshotSnapshotPoint">
            <summary>Sets the stub of ISnapshotDifference.MapToInlineSnapshot(SnapshotPoint point)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.MapToSnapshotDifferenceITextSnapshot">
            <summary>Sets the stub of ISnapshotDifference.MapToSnapshot(Difference difference, ITextSnapshot target)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.MapToSnapshotSnapshotPointITextSnapshotDifferenceMappingMode">
            <summary>Sets the stub of ISnapshotDifference.MapToSnapshot(SnapshotPoint point, ITextSnapshot target, DifferenceMappingMode mode)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.MapToSourceSnapshotSnapshotPoint">
            <summary>Sets the stub of ISnapshotDifference.MapToSourceSnapshot(SnapshotPoint inlinePoint)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#FindMatchOrDifference(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.Differencing.Match@,Microsoft.VisualStudio.Text.Differencing.Difference@)">
            <summary>Sets the stub of ISnapshotDifference.FindMatchOrDifference(SnapshotPoint point, Match&amp; match, Difference&amp; difference)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#MapToInlineSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>Sets the stub of ISnapshotDifference.MapToInlineSnapshot(SnapshotPoint point)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#MapToSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint,Microsoft.VisualStudio.Text.ITextSnapshot,Microsoft.VisualStudio.Text.Differencing.DifferenceMappingMode)">
            <summary>Sets the stub of ISnapshotDifference.MapToSnapshot(SnapshotPoint point, ITextSnapshot target, DifferenceMappingMode mode)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#MapToSnapshot(Microsoft.VisualStudio.Text.Differencing.Difference,Microsoft.VisualStudio.Text.ITextSnapshot)">
            <summary>Sets the stub of ISnapshotDifference.MapToSnapshot(Difference difference, ITextSnapshot target)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#MapToSourceSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>Sets the stub of ISnapshotDifference.MapToSourceSnapshot(SnapshotPoint inlinePoint)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#TranslateToSnapshot(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>Sets the stub of ISnapshotDifference.TranslateToSnapshot(SnapshotPoint point)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.RightBufferSnapshotGet">
            <summary>Sets the stub of ISnapshotDifference.get_RightBufferSnapshot()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.SnapshotLineTransformsGet">
            <summary>Sets the stub of ISnapshotDifference.get_SnapshotLineTransforms()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.TranslateToSnapshotSnapshotPoint">
            <summary>Sets the stub of ISnapshotDifference.TranslateToSnapshot(SnapshotPoint point)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#DifferenceBuffer">
            <summary>Sets the stub of ISnapshotDifference.get_DifferenceBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#DifferenceOptions">
            <summary>Sets the stub of ISnapshotDifference.get_DifferenceOptions()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#DifferenceSpans">
            <summary>Sets the stub of ISnapshotDifference.get_DifferenceSpans()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#IgnoreDifferencePredicates">
            <summary>Sets the stub of ISnapshotDifference.get_IgnoreDifferencePredicates()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#InlineBufferSnapshot">
            <summary>Sets the stub of ISnapshotDifference.get_InlineBufferSnapshot()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#LeftBufferSnapshot">
            <summary>Sets the stub of ISnapshotDifference.get_LeftBufferSnapshot()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#LineDifferences">
            <summary>Sets the stub of ISnapshotDifference.get_LineDifferences()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#RightBufferSnapshot">
            <summary>Sets the stub of ISnapshotDifference.get_RightBufferSnapshot()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubISnapshotDifference.mvstl::Microsoft#VisualStudio#Text#Differencing#ISnapshotDifference#SnapshotLineTransforms">
            <summary>Sets the stub of ISnapshotDifference.get_SnapshotLineTransforms()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Differencing.Fakes.StubSnapshotDifferenceChangeEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Differencing.SnapshotDifferenceChangeEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubSnapshotDifferenceChangeEventArgs.#ctor(Microsoft.VisualStudio.Text.Differencing.ISnapshotDifference,Microsoft.VisualStudio.Text.Differencing.ISnapshotDifference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Differencing.Fakes.StubSnapshotDifferenceChangeEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubSnapshotDifferenceChangeEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubSnapshotDifferenceChangeEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubSnapshotDifferenceChangeEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Differencing.Fakes.StubSnapshotDifferenceChangeEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag">
            <summary>Shim type of Microsoft.VisualStudio.Text.Document.ChangeTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.#ctor(Microsoft.VisualStudio.Text.Document.ChangeTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.Bind(Microsoft.VisualStudio.Text.Tagging.ITag)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.ChangeTypesGet">
            <summary>Sets the shim of ChangeTag.get_ChangeTypes()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.ChangeTypesSetChangeTypes">
            <summary>Sets the shim of ChangeTag.set_ChangeTypes(ChangeTypes value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.ConstructorChangeTypes">
            <summary>Sets the shim of ChangeTag.ChangeTag(ChangeTypes type)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.AllInstances.ChangeTypesGet">
            <summary>Sets the shim of ChangeTag.get_ChangeTypes()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.ShimChangeTag.AllInstances.ChangeTypesSetChangeTypes">
            <summary>Sets the shim of ChangeTag.set_ChangeTypes(ChangeTypes value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Document.Fakes.StubChangeTag">
            <summary>Stub type of Microsoft.VisualStudio.Text.Document.ChangeTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.StubChangeTag.#ctor(Microsoft.VisualStudio.Text.Document.ChangeTypes)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Document.Fakes.StubChangeTag.InitializeStub">
            <summary>Initializes a new instance of type StubChangeTag</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.StubChangeTag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.StubChangeTag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Document.Fakes.StubChangeTag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.#ctor(Microsoft.VisualStudio.Text.Editor.ConvertTabsToSpaces)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.Constructor">
            <summary>Sets the shim of ConvertTabsToSpaces.ConvertTabsToSpaces()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.DefaultGet">
            <summary>Sets the shim of ConvertTabsToSpaces.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.KeyGet">
            <summary>Sets the shim of ConvertTabsToSpaces.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.AllInstances.DefaultGet">
            <summary>Sets the shim of ConvertTabsToSpaces.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimConvertTabsToSpaces.AllInstances.KeyGet">
            <summary>Sets the shim of ConvertTabsToSpaces.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDefaultOptions">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.DefaultOptions</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDefaultOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDefaultOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDefaultOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDefaultOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDefaultOptions.StaticConstructor">
            <summary>Sets the shim of DefaultOptions.DefaultOptions()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.DeferCreationAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.#ctor(Microsoft.VisualStudio.Text.Editor.DeferCreationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.Constructor">
            <summary>Sets the shim of DeferCreationAttribute.DeferCreationAttribute()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.OptionNameGet">
            <summary>Sets the shim of DeferCreationAttribute.get_OptionName()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.OptionNameSetString">
            <summary>Sets the shim of DeferCreationAttribute.set_OptionName(String value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.AllInstances.OptionNameGet">
            <summary>Sets the shim of DeferCreationAttribute.get_OptionName()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimDeferCreationAttribute.AllInstances.OptionNameSetString">
            <summary>Sets the shim of DeferCreationAttribute.set_OptionName(String value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.ConstructorString">
            <summary>Sets the shim of EditorOptionChangedEventArgs.EditorOptionChangedEventArgs(String optionId)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.OptionIdGet">
            <summary>Sets the shim of EditorOptionChangedEventArgs.get_OptionId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionChangedEventArgs.AllInstances.OptionIdGet">
            <summary>Sets the shim of EditorOptionChangedEventArgs.get_OptionId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.#ctor(Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.Constructor">
            <summary>Sets the shim of EditorOptionDefinition.EditorOptionDefinition()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.EqualsObject">
            <summary>Sets the shim of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.GetHashCode">
            <summary>Sets the shim of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the shim of EditorOptionDefinition.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.IsValidObjectRef">
            <summary>Sets the shim of EditorOptionDefinition.IsValid(Object&amp; proposedValue)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.AllInstances.EqualsObject">
            <summary>Sets the shim of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.AllInstances.GetHashCode01">
            <summary>Sets the shim of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.AllInstances.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the shim of EditorOptionDefinition.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition.AllInstances.IsValidObjectRef">
            <summary>Sets the shim of EditorOptionDefinition.IsValid(Object&amp; proposedValue)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.#ctor(Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.Constructor">
            <summary>Sets the shim of EditorOptionDefinition`1.EditorOptionDefinition`1()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.DefaultGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.DefaultValueGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_DefaultValue()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.IsValidObjectRef">
            <summary>Sets the shim of EditorOptionDefinition`1.IsValid(Object&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.IsValidT0Ref">
            <summary>Sets the shim of EditorOptionDefinition`1.IsValid(!0&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.NameGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.ValueTypeGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_ValueType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances.DefaultGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances.DefaultValueGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_DefaultValue()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances.IsValidObjectRef">
            <summary>Sets the shim of EditorOptionDefinition`1.IsValid(Object&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances.IsValidT0Ref">
            <summary>Sets the shim of EditorOptionDefinition`1.IsValid(!0&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances.NameGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionDefinition`1.AllInstances.ValueTypeGet">
            <summary>Sets the shim of EditorOptionDefinition`1.get_ValueType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.EditorOptionKey`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.EqualityOpEditorOptionKeyOfT0EditorOptionKeyOfT0">
            <summary>Sets the shim of EditorOptionKey`1.op_Equality(EditorOptionKey`1&lt;!0&gt; left, EditorOptionKey`1&lt;!0&gt; right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.InequalityOpEditorOptionKeyOfT0EditorOptionKeyOfT0">
            <summary>Sets the shim of EditorOptionKey`1.op_Inequality(EditorOptionKey`1&lt;!0&gt; left, EditorOptionKey`1&lt;!0&gt; right)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimEditorOptionKey`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.IndentSize</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.#ctor(Microsoft.VisualStudio.Text.Editor.IndentSize)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.Constructor">
            <summary>Sets the shim of IndentSize.IndentSize()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.DefaultGet">
            <summary>Sets the shim of IndentSize.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.IsValidInt32Ref">
            <summary>Sets the shim of IndentSize.IsValid(Int32&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.KeyGet">
            <summary>Sets the shim of IndentSize.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.AllInstances.DefaultGet">
            <summary>Sets the shim of IndentSize.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.AllInstances.IsValidInt32Ref">
            <summary>Sets the shim of IndentSize.IsValid(Int32&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimIndentSize.AllInstances.KeyGet">
            <summary>Sets the shim of IndentSize.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.LongBufferLineChunk</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.#ctor(Microsoft.VisualStudio.Text.Editor.LongBufferLineChunk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.Constructor">
            <summary>Sets the shim of LongBufferLineChunk.LongBufferLineChunk()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.DefaultGet">
            <summary>Sets the shim of LongBufferLineChunk.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.KeyGet">
            <summary>Sets the shim of LongBufferLineChunk.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.AllInstances.DefaultGet">
            <summary>Sets the shim of LongBufferLineChunk.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineChunk.AllInstances.KeyGet">
            <summary>Sets the shim of LongBufferLineChunk.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.LongBufferLineThreshold</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.#ctor(Microsoft.VisualStudio.Text.Editor.LongBufferLineThreshold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.Constructor">
            <summary>Sets the shim of LongBufferLineThreshold.LongBufferLineThreshold()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.DefaultGet">
            <summary>Sets the shim of LongBufferLineThreshold.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.KeyGet">
            <summary>Sets the shim of LongBufferLineThreshold.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.AllInstances.DefaultGet">
            <summary>Sets the shim of LongBufferLineThreshold.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimLongBufferLineThreshold.AllInstances.KeyGet">
            <summary>Sets the shim of LongBufferLineThreshold.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.NewLineCharacter</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.#ctor(Microsoft.VisualStudio.Text.Editor.NewLineCharacter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.Constructor">
            <summary>Sets the shim of NewLineCharacter.NewLineCharacter()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.DefaultGet">
            <summary>Sets the shim of NewLineCharacter.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.KeyGet">
            <summary>Sets the shim of NewLineCharacter.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.AllInstances.DefaultGet">
            <summary>Sets the shim of NewLineCharacter.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimNewLineCharacter.AllInstances.KeyGet">
            <summary>Sets the shim of NewLineCharacter.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.#ctor(Microsoft.VisualStudio.Text.Editor.ReplicateNewLineCharacter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.Constructor">
            <summary>Sets the shim of ReplicateNewLineCharacter.ReplicateNewLineCharacter()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.DefaultGet">
            <summary>Sets the shim of ReplicateNewLineCharacter.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.KeyGet">
            <summary>Sets the shim of ReplicateNewLineCharacter.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.AllInstances.DefaultGet">
            <summary>Sets the shim of ReplicateNewLineCharacter.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimReplicateNewLineCharacter.AllInstances.KeyGet">
            <summary>Sets the shim of ReplicateNewLineCharacter.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.TabSize</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.#ctor(Microsoft.VisualStudio.Text.Editor.TabSize)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.Constructor">
            <summary>Sets the shim of TabSize.TabSize()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.DefaultGet">
            <summary>Sets the shim of TabSize.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.IsValidInt32Ref">
            <summary>Sets the shim of TabSize.IsValid(Int32&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.KeyGet">
            <summary>Sets the shim of TabSize.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.AllInstances.DefaultGet">
            <summary>Sets the shim of TabSize.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.AllInstances.IsValidInt32Ref">
            <summary>Sets the shim of TabSize.IsValid(Int32&amp; proposedValue)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.ShimTabSize.AllInstances.KeyGet">
            <summary>Sets the shim of TabSize.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionChangedEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Editor.EditorOptionChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionChangedEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubEditorOptionChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition">
            <summary>Stub type of Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.DefaultValueGet">
            <summary>Sets the stub of EditorOptionDefinition.get_DefaultValue()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.Equals(System.Object)">
            <summary>Sets the stub of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.EqualsObject">
            <summary>Sets the stub of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.GetHashCode">
            <summary>Sets the stub of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.GetHashCode01">
            <summary>Sets the stub of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubEditorOptionDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.IsApplicableToScope(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
            <summary>Sets the stub of EditorOptionDefinition.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the stub of EditorOptionDefinition.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.IsValid(System.Object@)">
            <summary>Sets the stub of EditorOptionDefinition.IsValid(Object&amp; proposedValue)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.IsValidObjectRef">
            <summary>Sets the stub of EditorOptionDefinition.IsValid(Object&amp; proposedValue)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.NameGet">
            <summary>Sets the stub of EditorOptionDefinition.get_Name()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.ValueTypeGet">
            <summary>Sets the stub of EditorOptionDefinition.get_ValueType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.DefaultValue">
            <summary>Sets the stub of EditorOptionDefinition.get_DefaultValue()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.Name">
            <summary>Sets the stub of EditorOptionDefinition.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition.ValueType">
            <summary>Sets the stub of EditorOptionDefinition.get_ValueType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Editor.EditorOptionDefinition`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.DefaultGet">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Default()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.Equals(System.Object)">
            <summary>Sets the stub of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.EqualsObject">
            <summary>Sets the stub of EditorOptionDefinition.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.GetHashCode">
            <summary>Sets the stub of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.GetHashCode01">
            <summary>Sets the stub of EditorOptionDefinition.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.InitializeStub">
            <summary>Initializes a new instance of type StubEditorOptionDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.IsApplicableToScope(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
            <summary>Sets the stub of EditorOptionDefinition.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.IsApplicableToScopeIPropertyOwner">
            <summary>Sets the stub of EditorOptionDefinition.IsApplicableToScope(IPropertyOwner scope)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.IsValid(`0@)">
            <summary>Sets the stub of EditorOptionDefinition`1.IsValid(!0&amp; proposedValue)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.IsValidT0Ref">
            <summary>Sets the stub of EditorOptionDefinition`1.IsValid(!0&amp; proposedValue)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.KeyGet">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Key()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.Default">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Default()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubEditorOptionDefinition`1.Key">
            <summary>Sets the stub of EditorOptionDefinition`1.get_Key()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions">
            <summary>Stub type of Microsoft.VisualStudio.Text.Editor.IEditorOptions</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.#ctor">
            <summary>Initializes a new instance of type StubIEditorOptions</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubIEditorOptions.Parent as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.ClearOptionValueOf1EditorOptionKeyOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},System.Boolean})">
            <summary>Sets stubs of ClearOptionValue(EditorOptionKey`1&lt;!!0&gt; key)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.ClearOptionValueString">
            <summary>Sets the stub of IEditorOptions.ClearOptionValue(String optionId)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.GetOptionValueOf1EditorOptionKeyOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},``0})">
            <summary>Sets stubs of GetOptionValue(EditorOptionKey`1&lt;!!0&gt; key)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.GetOptionValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetOptionValue(String optionId)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.GetOptionValueString">
            <summary>Sets the stub of IEditorOptions.GetOptionValue(String optionId)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.GlobalOptionsGet">
            <summary>Sets the stub of IEditorOptions.get_GlobalOptions()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.IsOptionDefinedOf1EditorOptionKeyOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},System.Boolean,System.Boolean})">
            <summary>Sets stubs of IsOptionDefined(EditorOptionKey`1&lt;!!0&gt; key, Boolean localScopeOnly)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.IsOptionDefinedStringBoolean">
            <summary>Sets the stub of IEditorOptions.IsOptionDefined(String optionId, Boolean localScopeOnly)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#ClearOptionValue(System.String)">
            <summary>Sets the stub of IEditorOptions.ClearOptionValue(String optionId)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#ClearOptionValue``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0})">
            <summary>Sets the stub of IEditorOptions.ClearOptionValue(EditorOptionKey`1&lt;!!0&gt; key)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#GetOptionValue``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0})">
            <summary>Sets the stub of IEditorOptions.GetOptionValue(EditorOptionKey`1&lt;!!0&gt; key)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#GetOptionValue(System.String)">
            <summary>Sets the stub of IEditorOptions.GetOptionValue(String optionId)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#GetOptionValue``1(System.String)">
            <summary>Sets the stub of IEditorOptions.GetOptionValue(String optionId)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#IsOptionDefined(System.String,System.Boolean)">
            <summary>Sets the stub of IEditorOptions.IsOptionDefined(String optionId, Boolean localScopeOnly)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#IsOptionDefined``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},System.Boolean)">
            <summary>Sets the stub of IEditorOptions.IsOptionDefined(EditorOptionKey`1&lt;!!0&gt; key, Boolean localScopeOnly)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#SetOptionValue``1(Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},``0)">
            <summary>Sets the stub of IEditorOptions.SetOptionValue(EditorOptionKey`1&lt;!!0&gt; key, !!0 value)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#SetOptionValue(System.String,System.Object)">
            <summary>Sets the stub of IEditorOptions.SetOptionValue(String optionId, Object value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.ParentGet">
            <summary>Sets the stub of IEditorOptions.get_Parent()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.ParentSetIEditorOptions">
            <summary>Sets the stub of IEditorOptions.set_Parent(IEditorOptions value)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.SetOptionValueOf1EditorOptionKeyOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.Text.Editor.EditorOptionKey{``0},``0})">
            <summary>Sets stubs of SetOptionValue(EditorOptionKey`1&lt;!!0&gt; key, !!0 value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.SetOptionValueStringObject">
            <summary>Sets the stub of IEditorOptions.SetOptionValue(String optionId, Object value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.SupportedOptionsGet">
            <summary>Sets the stub of IEditorOptions.get_SupportedOptions()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#GlobalOptions">
            <summary>Sets the stub of IEditorOptions.get_GlobalOptions()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#Parent">
            <summary>Sets the stub of IEditorOptions.get_Parent()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptions.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptions#SupportedOptions">
            <summary>Sets the stub of IEditorOptions.get_SupportedOptions()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Editor.IEditorOptionsFactoryService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.#ctor">
            <summary>Initializes a new instance of type StubIEditorOptionsFactoryService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.CreateOptions">
            <summary>Sets the stub of IEditorOptionsFactoryService.CreateOptions()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.GetOptionsIPropertyOwner">
            <summary>Sets the stub of IEditorOptionsFactoryService.GetOptions(IPropertyOwner scope)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.GlobalOptionsGet">
            <summary>Sets the stub of IEditorOptionsFactoryService.get_GlobalOptions()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptionsFactoryService#CreateOptions">
            <summary>Sets the stub of IEditorOptionsFactoryService.CreateOptions()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptionsFactoryService#GetOptions(Microsoft.VisualStudio.Utilities.IPropertyOwner)">
            <summary>Sets the stub of IEditorOptionsFactoryService.GetOptions(IPropertyOwner scope)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.Fakes.StubIEditorOptionsFactoryService.mvstl::Microsoft#VisualStudio#Text#Editor#IEditorOptionsFactoryService#GlobalOptions">
            <summary>Sets the stub of IEditorOptionsFactoryService.get_GlobalOptions()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions">
            <summary>Shim type of Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.DefaultOptionExtensions</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.GetIndentSizeIEditorOptions">
            <summary>Sets the shim of DefaultOptionExtensions.GetIndentSize(IEditorOptions options)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.GetNewLineCharacterIEditorOptions">
            <summary>Sets the shim of DefaultOptionExtensions.GetNewLineCharacter(IEditorOptions options)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.GetReplicateNewLineCharacterIEditorOptions">
            <summary>Sets the shim of DefaultOptionExtensions.GetReplicateNewLineCharacter(IEditorOptions options)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.GetTabSizeIEditorOptions">
            <summary>Sets the shim of DefaultOptionExtensions.GetTabSize(IEditorOptions options)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Editor.OptionsExtensionMethods.Fakes.ShimDefaultOptionExtensions.IsConvertTabsToSpacesEnabledIEditorOptions">
            <summary>Sets the shim of DefaultOptionExtensions.IsConvertTabsToSpacesEnabled(IEditorOptions options)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AfterContentTypeGet">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.get_AfterContentType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AfterContentTypeSetIContentType">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.set_AfterContentType(IContentType value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.BeforeContentTypeGet">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.get_BeforeContentType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.BeforeContentTypeSetIContentType">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.set_BeforeContentType(IContentType value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.ConstructorIContentTypeIContentType">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.TextDataModelContentTypeChangedEventArgs(IContentType beforeContentType, IContentType afterContentType)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AllInstances.AfterContentTypeGet">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.get_AfterContentType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AllInstances.AfterContentTypeSetIContentType">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.set_AfterContentType(IContentType value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AllInstances.BeforeContentTypeGet">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.get_BeforeContentType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimTextDataModelContentTypeChangedEventArgs.AllInstances.BeforeContentTypeSetIContentType">
            <summary>Sets the shim of TextDataModelContentTypeChangedEventArgs.set_BeforeContentType(IContentType value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint">
            <summary>Shim type of Microsoft.VisualStudio.Text.VirtualSnapshotPoint</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.CharacterDeletedSnapshotPointITextSnapshot">
            <summary>Sets the shim of VirtualSnapshotPoint.CharacterDeleted(SnapshotPoint position, ITextSnapshot snapshot)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.EqualityOpVirtualSnapshotPointVirtualSnapshotPoint">
            <summary>Sets the shim of VirtualSnapshotPoint.op_Equality(VirtualSnapshotPoint left, VirtualSnapshotPoint right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.GreaterThanOpVirtualSnapshotPointVirtualSnapshotPoint">
            <summary>Sets the shim of VirtualSnapshotPoint.op_GreaterThan(VirtualSnapshotPoint left, VirtualSnapshotPoint right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.GreaterThanOrEqualOpVirtualSnapshotPointVirtualSnapshotPoint">
            <summary>Sets the shim of VirtualSnapshotPoint.op_GreaterThanOrEqual(VirtualSnapshotPoint left, VirtualSnapshotPoint right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.InequalityOpVirtualSnapshotPointVirtualSnapshotPoint">
            <summary>Sets the shim of VirtualSnapshotPoint.op_Inequality(VirtualSnapshotPoint left, VirtualSnapshotPoint right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.LessThanOpVirtualSnapshotPointVirtualSnapshotPoint">
            <summary>Sets the shim of VirtualSnapshotPoint.op_LessThan(VirtualSnapshotPoint left, VirtualSnapshotPoint right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.LessThanOrEqualOpVirtualSnapshotPointVirtualSnapshotPoint">
            <summary>Sets the shim of VirtualSnapshotPoint.op_LessThanOrEqual(VirtualSnapshotPoint left, VirtualSnapshotPoint right)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotPoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan">
            <summary>Shim type of Microsoft.VisualStudio.Text.VirtualSnapshotSpan</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.EqualityOpVirtualSnapshotSpanVirtualSnapshotSpan">
            <summary>Sets the shim of VirtualSnapshotSpan.op_Equality(VirtualSnapshotSpan left, VirtualSnapshotSpan right)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.GetEndPointModeSpanTrackingMode">
            <summary>Sets the shim of VirtualSnapshotSpan.GetEndPointMode(SpanTrackingMode trackingMode)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.GetStartPointModeSpanTrackingMode">
            <summary>Sets the shim of VirtualSnapshotSpan.GetStartPointMode(SpanTrackingMode trackingMode)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.InequalityOpVirtualSnapshotSpanVirtualSnapshotSpan">
            <summary>Sets the shim of VirtualSnapshotSpan.op_Inequality(VirtualSnapshotSpan left, VirtualSnapshotSpan right)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.ShimVirtualSnapshotSpan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel">
            <summary>Stub type of Microsoft.VisualStudio.Text.ITextDataModel</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.#ctor">
            <summary>Initializes a new instance of type StubITextDataModel</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.ContentTypeGet">
            <summary>Sets the stub of ITextDataModel.get_ContentType()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.DataBufferGet">
            <summary>Sets the stub of ITextDataModel.get_DataBuffer()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.DocumentBufferGet">
            <summary>Sets the stub of ITextDataModel.get_DocumentBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.mvstl::Microsoft#VisualStudio#Text#ITextDataModel#ContentType">
            <summary>Sets the stub of ITextDataModel.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.mvstl::Microsoft#VisualStudio#Text#ITextDataModel#DataBuffer">
            <summary>Sets the stub of ITextDataModel.get_DataBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.StubITextDataModel.mvstl::Microsoft#VisualStudio#Text#ITextDataModel#DocumentBuffer">
            <summary>Sets the stub of ITextDataModel.get_DocumentBuffer()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Fakes.StubTextDataModelContentTypeChangedEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.TextDataModelContentTypeChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.StubTextDataModelContentTypeChangedEventArgs.#ctor(Microsoft.VisualStudio.Utilities.IContentType,Microsoft.VisualStudio.Utilities.IContentType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Fakes.StubTextDataModelContentTypeChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTextDataModelContentTypeChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.StubTextDataModelContentTypeChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.StubTextDataModelContentTypeChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Fakes.StubTextDataModelContentTypeChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData">
            <summary>Shim type of Microsoft.VisualStudio.Text.Operations.FindData</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.EqualityOpFindDataFindData">
            <summary>Sets the shim of FindData.op_Equality(FindData data1, FindData data2)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.InequalityOpFindDataFindData">
            <summary>Sets the shim of FindData.op_Inequality(FindData data1, FindData data2)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimFindData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent">
            <summary>Shim type of Microsoft.VisualStudio.Text.Operations.TextExtent</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.EqualityOpTextExtentTextExtent">
            <summary>Sets the shim of TextExtent.op_Equality(TextExtent extent1, TextExtent extent2)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.InequalityOpTextExtentTextExtent">
            <summary>Sets the shim of TextExtent.op_Inequality(TextExtent extent1, TextExtent extent2)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextExtent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.#ctor(Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.ConstructorTextUndoHistoryStateITextUndoTransaction">
            <summary>Sets the shim of TextUndoRedoEventArgs.TextUndoRedoEventArgs(TextUndoHistoryState state, ITextUndoTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.StateGet">
            <summary>Sets the shim of TextUndoRedoEventArgs.get_State()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.TransactionGet">
            <summary>Sets the shim of TextUndoRedoEventArgs.get_Transaction()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.AllInstances.StateGet">
            <summary>Sets the shim of TextUndoRedoEventArgs.get_State()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoRedoEventArgs.AllInstances.TransactionGet">
            <summary>Sets the shim of TextUndoRedoEventArgs.get_Transaction()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.#ctor(Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.ConstructorITextUndoTransactionTextUndoTransactionCompletionResult">
            <summary>Sets the shim of TextUndoTransactionCompletedEventArgs.TextUndoTransactionCompletedEventArgs(ITextUndoTransaction transaction, TextUndoTransactionCompletionResult result)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.ResultGet">
            <summary>Sets the shim of TextUndoTransactionCompletedEventArgs.get_Result()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.TransactionGet">
            <summary>Sets the shim of TextUndoTransactionCompletedEventArgs.get_Transaction()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.AllInstances.ResultGet">
            <summary>Sets the shim of TextUndoTransactionCompletedEventArgs.get_Result()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.ShimTextUndoTransactionCompletedEventArgs.AllInstances.TransactionGet">
            <summary>Sets the shim of TextUndoTransactionCompletedEventArgs.get_Transaction()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.#ctor">
            <summary>Initializes a new instance of type StubIMergeTextUndoTransactionPolicy</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.CanMergeITextUndoTransactionITextUndoTransaction">
            <summary>Sets the stub of IMergeTextUndoTransactionPolicy.CanMerge(ITextUndoTransaction newerTransaction, ITextUndoTransaction olderTransaction)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.mvstl::Microsoft#VisualStudio#Text#Operations#IMergeTextUndoTransactionPolicy#CanMerge(Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction,Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction)">
            <summary>Sets the stub of IMergeTextUndoTransactionPolicy.CanMerge(ITextUndoTransaction newerTransaction, ITextUndoTransaction olderTransaction)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.mvstl::Microsoft#VisualStudio#Text#Operations#IMergeTextUndoTransactionPolicy#PerformTransactionMerge(Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction,Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction)">
            <summary>Sets the stub of IMergeTextUndoTransactionPolicy.PerformTransactionMerge(ITextUndoTransaction existingTransaction, ITextUndoTransaction newTransaction)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.mvstl::Microsoft#VisualStudio#Text#Operations#IMergeTextUndoTransactionPolicy#TestCompatiblePolicy(Microsoft.VisualStudio.Text.Operations.IMergeTextUndoTransactionPolicy)">
            <summary>Sets the stub of IMergeTextUndoTransactionPolicy.TestCompatiblePolicy(IMergeTextUndoTransactionPolicy other)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.PerformTransactionMergeITextUndoTransactionITextUndoTransaction">
            <summary>Sets the stub of IMergeTextUndoTransactionPolicy.PerformTransactionMerge(ITextUndoTransaction existingTransaction, ITextUndoTransaction newTransaction)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubIMergeTextUndoTransactionPolicy.TestCompatiblePolicyIMergeTextUndoTransactionPolicy">
            <summary>Sets the stub of IMergeTextUndoTransactionPolicy.TestCompatiblePolicy(IMergeTextUndoTransactionPolicy other)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.#ctor">
            <summary>Initializes a new instance of type StubITextBufferUndoManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.mvstl::Microsoft#VisualStudio#Text#Operations#ITextBufferUndoManager#UnregisterUndoHistory">
            <summary>Sets the stub of ITextBufferUndoManager.UnregisterUndoHistory()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.TextBufferGet">
            <summary>Sets the stub of ITextBufferUndoManager.get_TextBuffer()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.TextBufferUndoHistoryGet">
            <summary>Sets the stub of ITextBufferUndoManager.get_TextBufferUndoHistory()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.UnregisterUndoHistory">
            <summary>Sets the stub of ITextBufferUndoManager.UnregisterUndoHistory()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.mvstl::Microsoft#VisualStudio#Text#Operations#ITextBufferUndoManager#TextBuffer">
            <summary>Sets the stub of ITextBufferUndoManager.get_TextBuffer()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManager.mvstl::Microsoft#VisualStudio#Text#Operations#ITextBufferUndoManager#TextBufferUndoHistory">
            <summary>Sets the stub of ITextBufferUndoManager.get_TextBufferUndoHistory()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManagerProvider">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextBufferUndoManagerProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManagerProvider.#ctor">
            <summary>Initializes a new instance of type StubITextBufferUndoManagerProvider</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManagerProvider.GetTextBufferUndoManagerITextBuffer">
            <summary>Sets the stub of ITextBufferUndoManagerProvider.GetTextBufferUndoManager(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManagerProvider.mvstl::Microsoft#VisualStudio#Text#Operations#ITextBufferUndoManagerProvider#GetTextBufferUndoManager(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of ITextBufferUndoManagerProvider.GetTextBufferUndoManager(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManagerProvider.mvstl::Microsoft#VisualStudio#Text#Operations#ITextBufferUndoManagerProvider#RemoveTextBufferUndoManager(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of ITextBufferUndoManagerProvider.RemoveTextBufferUndoManager(ITextBuffer textBuffer)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextBufferUndoManagerProvider.RemoveTextBufferUndoManagerITextBuffer">
            <summary>Sets the stub of ITextBufferUndoManagerProvider.RemoveTextBufferUndoManager(ITextBuffer textBuffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextSearchNavigator</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.#ctor">
            <summary>Initializes a new instance of type StubITextSearchNavigator</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.AttachBackingFieldToReplaceTerm">
            <summary>Attaches delegates to emulate StubITextSearchNavigator.ReplaceTerm as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.AttachBackingFieldToSearchOptions">
            <summary>Attaches delegates to emulate StubITextSearchNavigator.SearchOptions as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.AttachBackingFieldToSearchSpan">
            <summary>Attaches delegates to emulate StubITextSearchNavigator.SearchSpan as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.AttachBackingFieldToSearchTerm">
            <summary>Attaches delegates to emulate StubITextSearchNavigator.SearchTerm as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.AttachBackingFieldToStartPoint">
            <summary>Attaches delegates to emulate StubITextSearchNavigator.StartPoint as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.ClearCurrentResult">
            <summary>Sets the stub of ITextSearchNavigator.ClearCurrentResult()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.CurrentResultGet">
            <summary>Sets the stub of ITextSearchNavigator.get_CurrentResult()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.Find">
            <summary>Sets the stub of ITextSearchNavigator.Find()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#ClearCurrentResult">
            <summary>Sets the stub of ITextSearchNavigator.ClearCurrentResult()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#Find">
            <summary>Sets the stub of ITextSearchNavigator.Find()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#Replace">
            <summary>Sets the stub of ITextSearchNavigator.Replace()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.Replace">
            <summary>Sets the stub of ITextSearchNavigator.Replace()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.ReplaceTermGet">
            <summary>Sets the stub of ITextSearchNavigator.get_ReplaceTerm()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.ReplaceTermSetString">
            <summary>Sets the stub of ITextSearchNavigator.set_ReplaceTerm(String value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.SearchOptionsGet">
            <summary>Sets the stub of ITextSearchNavigator.get_SearchOptions()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.SearchOptionsSetFindOptions">
            <summary>Sets the stub of ITextSearchNavigator.set_SearchOptions(FindOptions value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.SearchSpanGet">
            <summary>Sets the stub of ITextSearchNavigator.get_SearchSpan()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.SearchSpanSetITrackingSpan">
            <summary>Sets the stub of ITextSearchNavigator.set_SearchSpan(ITrackingSpan value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.SearchTermGet">
            <summary>Sets the stub of ITextSearchNavigator.get_SearchTerm()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.SearchTermSetString">
            <summary>Sets the stub of ITextSearchNavigator.set_SearchTerm(String value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.StartPointGet">
            <summary>Sets the stub of ITextSearchNavigator.get_StartPoint()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.StartPointSetNullableOfSnapshotPoint">
            <summary>Sets the stub of ITextSearchNavigator.set_StartPoint(Nullable`1&lt;SnapshotPoint&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#CurrentResult">
            <summary>Sets the stub of ITextSearchNavigator.get_CurrentResult()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#ReplaceTerm">
            <summary>Sets the stub of ITextSearchNavigator.get_ReplaceTerm()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#SearchOptions">
            <summary>Sets the stub of ITextSearchNavigator.get_SearchOptions()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#SearchSpan">
            <summary>Sets the stub of ITextSearchNavigator.get_SearchSpan()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#SearchTerm">
            <summary>Sets the stub of ITextSearchNavigator.get_SearchTerm()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigator#StartPoint">
            <summary>Sets the stub of ITextSearchNavigator.get_StartPoint()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigatorFactoryService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextSearchNavigatorFactoryService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigatorFactoryService.#ctor">
            <summary>Initializes a new instance of type StubITextSearchNavigatorFactoryService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigatorFactoryService.CreateSearchNavigatorITextBuffer">
            <summary>Sets the stub of ITextSearchNavigatorFactoryService.CreateSearchNavigator(ITextBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchNavigatorFactoryService.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchNavigatorFactoryService#CreateSearchNavigator(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of ITextSearchNavigatorFactoryService.CreateSearchNavigator(ITextBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextSearchService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService.#ctor">
            <summary>Initializes a new instance of type StubITextSearchService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService.FindAllFindData">
            <summary>Sets the stub of ITextSearchService.FindAll(FindData findData)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService.FindNextInt32BooleanFindData">
            <summary>Sets the stub of ITextSearchService.FindNext(Int32 startIndex, Boolean wraparound, FindData findData)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService#FindAll(Microsoft.VisualStudio.Text.Operations.FindData)">
            <summary>Sets the stub of ITextSearchService.FindAll(FindData findData)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService#FindNext(System.Int32,System.Boolean,Microsoft.VisualStudio.Text.Operations.FindData)">
            <summary>Sets the stub of ITextSearchService.FindNext(Int32 startIndex, Boolean wraparound, FindData findData)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextSearchService2</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.#ctor">
            <summary>Initializes a new instance of type StubITextSearchService2</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindAllFindData">
            <summary>Sets the stub of ITextSearchService.FindAll(FindData findData)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindAllForReplaceSnapshotSpanStringStringFindOptions">
            <summary>Sets the stub of ITextSearchService2.FindAllForReplace(SnapshotSpan searchRange, String searchPattern, String replacePattern, FindOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindAllSnapshotSpanSnapshotPointStringFindOptions">
            <summary>Sets the stub of ITextSearchService2.FindAll(SnapshotSpan searchRange, SnapshotPoint startingPosition, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindAllSnapshotSpanStringFindOptions">
            <summary>Sets the stub of ITextSearchService2.FindAll(SnapshotSpan searchRange, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindForReplaceSnapshotPointStringStringFindOptionsStringOut">
            <summary>Sets the stub of ITextSearchService2.FindForReplace(SnapshotPoint startingPosition, String searchPattern, String replacePattern, FindOptions options, String&amp; expandedReplacePattern)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindForReplaceSnapshotSpanStringStringFindOptionsStringOut">
            <summary>Sets the stub of ITextSearchService2.FindForReplace(SnapshotSpan searchRange, String searchPattern, String replacePattern, FindOptions options, String&amp; expandedReplacePattern)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindNextInt32BooleanFindData">
            <summary>Sets the stub of ITextSearchService.FindNext(Int32 startIndex, Boolean wraparound, FindData findData)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindSnapshotPointStringFindOptions">
            <summary>Sets the stub of ITextSearchService2.Find(SnapshotPoint startingPosition, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.FindSnapshotSpanSnapshotPointStringFindOptions">
            <summary>Sets the stub of ITextSearchService2.Find(SnapshotSpan searchRange, SnapshotPoint startingPosition, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService#FindAll(Microsoft.VisualStudio.Text.Operations.FindData)">
            <summary>Sets the stub of ITextSearchService.FindAll(FindData findData)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService#FindNext(System.Int32,System.Boolean,Microsoft.VisualStudio.Text.Operations.FindData)">
            <summary>Sets the stub of ITextSearchService.FindNext(Int32 startIndex, Boolean wraparound, FindData findData)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#Find(Microsoft.VisualStudio.Text.SnapshotPoint,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions)">
            <summary>Sets the stub of ITextSearchService2.Find(SnapshotPoint startingPosition, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#Find(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SnapshotPoint,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions)">
            <summary>Sets the stub of ITextSearchService2.Find(SnapshotSpan searchRange, SnapshotPoint startingPosition, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#FindAll(Microsoft.VisualStudio.Text.SnapshotSpan,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions)">
            <summary>Sets the stub of ITextSearchService2.FindAll(SnapshotSpan searchRange, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#FindAll(Microsoft.VisualStudio.Text.SnapshotSpan,Microsoft.VisualStudio.Text.SnapshotPoint,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions)">
            <summary>Sets the stub of ITextSearchService2.FindAll(SnapshotSpan searchRange, SnapshotPoint startingPosition, String searchPattern, FindOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#FindAllForReplace(Microsoft.VisualStudio.Text.SnapshotSpan,System.String,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions)">
            <summary>Sets the stub of ITextSearchService2.FindAllForReplace(SnapshotSpan searchRange, String searchPattern, String replacePattern, FindOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#FindForReplace(Microsoft.VisualStudio.Text.SnapshotPoint,System.String,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions,System.String@)">
            <summary>Sets the stub of ITextSearchService2.FindForReplace(SnapshotPoint startingPosition, String searchPattern, String replacePattern, FindOptions options, String&amp; expandedReplacePattern)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextSearchService2.mvstl::Microsoft#VisualStudio#Text#Operations#ITextSearchService2#FindForReplace(Microsoft.VisualStudio.Text.SnapshotSpan,System.String,System.String,Microsoft.VisualStudio.Text.Operations.FindOptions,System.String@)">
            <summary>Sets the stub of ITextSearchService2.FindForReplace(SnapshotSpan searchRange, String searchPattern, String replacePattern, FindOptions options, String&amp; expandedReplacePattern)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextStructureNavigator</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.#ctor">
            <summary>Initializes a new instance of type StubITextStructureNavigator</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.ContentTypeGet">
            <summary>Sets the stub of ITextStructureNavigator.get_ContentType()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.GetExtentOfWordSnapshotPoint">
            <summary>Sets the stub of ITextStructureNavigator.GetExtentOfWord(SnapshotPoint currentPosition)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.GetSpanOfEnclosingSnapshotSpan">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfEnclosing(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.GetSpanOfFirstChildSnapshotSpan">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfFirstChild(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.GetSpanOfNextSiblingSnapshotSpan">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfNextSibling(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.GetSpanOfPreviousSiblingSnapshotSpan">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfPreviousSibling(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigator#GetExtentOfWord(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>Sets the stub of ITextStructureNavigator.GetExtentOfWord(SnapshotPoint currentPosition)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigator#GetSpanOfEnclosing(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfEnclosing(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigator#GetSpanOfFirstChild(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfFirstChild(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigator#GetSpanOfNextSibling(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfNextSibling(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigator#GetSpanOfPreviousSibling(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Sets the stub of ITextStructureNavigator.GetSpanOfPreviousSibling(SnapshotSpan activeSpan)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigator.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigator#ContentType">
            <summary>Sets the stub of ITextStructureNavigator.get_ContentType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorProvider">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorProvider.#ctor">
            <summary>Initializes a new instance of type StubITextStructureNavigatorProvider</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorProvider.CreateTextStructureNavigatorITextBuffer">
            <summary>Sets the stub of ITextStructureNavigatorProvider.CreateTextStructureNavigator(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorProvider.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigatorProvider#CreateTextStructureNavigator(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of ITextStructureNavigatorProvider.CreateTextStructureNavigator(ITextBuffer textBuffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorSelectorService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextStructureNavigatorSelectorService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorSelectorService.#ctor">
            <summary>Initializes a new instance of type StubITextStructureNavigatorSelectorService</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorSelectorService.CreateTextStructureNavigatorITextBufferIContentType">
            <summary>Sets the stub of ITextStructureNavigatorSelectorService.CreateTextStructureNavigator(ITextBuffer textBuffer, IContentType contentType)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorSelectorService.GetTextStructureNavigatorITextBuffer">
            <summary>Sets the stub of ITextStructureNavigatorSelectorService.GetTextStructureNavigator(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorSelectorService.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigatorSelectorService#CreateTextStructureNavigator(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Utilities.IContentType)">
            <summary>Sets the stub of ITextStructureNavigatorSelectorService.CreateTextStructureNavigator(ITextBuffer textBuffer, IContentType contentType)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextStructureNavigatorSelectorService.mvstl::Microsoft#VisualStudio#Text#Operations#ITextStructureNavigatorSelectorService#GetTextStructureNavigator(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of ITextStructureNavigatorSelectorService.GetTextStructureNavigator(ITextBuffer textBuffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextUndoHistory</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.#ctor">
            <summary>Initializes a new instance of type StubITextUndoHistory</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.CanRedoGet">
            <summary>Sets the stub of ITextUndoHistory.get_CanRedo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.CanUndoGet">
            <summary>Sets the stub of ITextUndoHistory.get_CanUndo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.CreateTransactionString">
            <summary>Sets the stub of ITextUndoHistory.CreateTransaction(String description)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.CurrentTransactionGet">
            <summary>Sets the stub of ITextUndoHistory.get_CurrentTransaction()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.LastRedoTransactionGet">
            <summary>Sets the stub of ITextUndoHistory.get_LastRedoTransaction()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.LastUndoTransactionGet">
            <summary>Sets the stub of ITextUndoHistory.get_LastUndoTransaction()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#CreateTransaction(System.String)">
            <summary>Sets the stub of ITextUndoHistory.CreateTransaction(String description)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#Redo(System.Int32)">
            <summary>Sets the stub of ITextUndoHistory.Redo(Int32 count)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#Undo(System.Int32)">
            <summary>Sets the stub of ITextUndoHistory.Undo(Int32 count)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.PropertiesGet">
            <summary>Sets the stub of IPropertyOwner.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.RedoDescriptionGet">
            <summary>Sets the stub of ITextUndoHistory.get_RedoDescription()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.RedoInt32">
            <summary>Sets the stub of ITextUndoHistory.Redo(Int32 count)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.RedoStackGet">
            <summary>Sets the stub of ITextUndoHistory.get_RedoStack()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.StateGet">
            <summary>Sets the stub of ITextUndoHistory.get_State()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.UndoDescriptionGet">
            <summary>Sets the stub of ITextUndoHistory.get_UndoDescription()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.UndoInt32">
            <summary>Sets the stub of ITextUndoHistory.Undo(Int32 count)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.UndoStackGet">
            <summary>Sets the stub of ITextUndoHistory.get_UndoStack()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#CanRedo">
            <summary>Sets the stub of ITextUndoHistory.get_CanRedo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#CanUndo">
            <summary>Sets the stub of ITextUndoHistory.get_CanUndo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#CurrentTransaction">
            <summary>Sets the stub of ITextUndoHistory.get_CurrentTransaction()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#LastRedoTransaction">
            <summary>Sets the stub of ITextUndoHistory.get_LastRedoTransaction()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#LastUndoTransaction">
            <summary>Sets the stub of ITextUndoHistory.get_LastUndoTransaction()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvscu::Microsoft#VisualStudio#Utilities#IPropertyOwner#Properties">
            <summary>Sets the stub of IPropertyOwner.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#RedoDescription">
            <summary>Sets the stub of ITextUndoHistory.get_RedoDescription()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#RedoStack">
            <summary>Sets the stub of ITextUndoHistory.get_RedoStack()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#State">
            <summary>Sets the stub of ITextUndoHistory.get_State()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#UndoDescription">
            <summary>Sets the stub of ITextUndoHistory.get_UndoDescription()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistory.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistory#UndoStack">
            <summary>Sets the stub of ITextUndoHistory.get_UndoStack()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextUndoHistoryRegistry</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.#ctor">
            <summary>Initializes a new instance of type StubITextUndoHistoryRegistry</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.AttachHistoryObjectITextUndoHistory">
            <summary>Sets the stub of ITextUndoHistoryRegistry.AttachHistory(Object context, ITextUndoHistory history)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.GetHistoryObject">
            <summary>Sets the stub of ITextUndoHistoryRegistry.GetHistory(Object context)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistoryRegistry#AttachHistory(System.Object,Microsoft.VisualStudio.Text.Operations.ITextUndoHistory)">
            <summary>Sets the stub of ITextUndoHistoryRegistry.AttachHistory(Object context, ITextUndoHistory history)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistoryRegistry#GetHistory(System.Object)">
            <summary>Sets the stub of ITextUndoHistoryRegistry.GetHistory(Object context)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistoryRegistry#RegisterHistory(System.Object)">
            <summary>Sets the stub of ITextUndoHistoryRegistry.RegisterHistory(Object context)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistoryRegistry#RemoveHistory(Microsoft.VisualStudio.Text.Operations.ITextUndoHistory)">
            <summary>Sets the stub of ITextUndoHistoryRegistry.RemoveHistory(ITextUndoHistory history)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoHistoryRegistry#TryGetHistory(System.Object,Microsoft.VisualStudio.Text.Operations.ITextUndoHistory@)">
            <summary>Sets the stub of ITextUndoHistoryRegistry.TryGetHistory(Object context, ITextUndoHistory&amp; history)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.RegisterHistoryObject">
            <summary>Sets the stub of ITextUndoHistoryRegistry.RegisterHistory(Object context)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.RemoveHistoryITextUndoHistory">
            <summary>Sets the stub of ITextUndoHistoryRegistry.RemoveHistory(ITextUndoHistory history)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoHistoryRegistry.TryGetHistoryObjectITextUndoHistoryOut">
            <summary>Sets the stub of ITextUndoHistoryRegistry.TryGetHistory(Object context, ITextUndoHistory&amp; history)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.#ctor">
            <summary>Initializes a new instance of type StubITextUndoPrimitive</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubITextUndoPrimitive.Parent as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.CanMergeITextUndoPrimitive">
            <summary>Sets the stub of ITextUndoPrimitive.CanMerge(ITextUndoPrimitive older)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.CanRedoGet">
            <summary>Sets the stub of ITextUndoPrimitive.get_CanRedo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.CanUndoGet">
            <summary>Sets the stub of ITextUndoPrimitive.get_CanUndo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.Do">
            <summary>Sets the stub of ITextUndoPrimitive.Do()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.MergeITextUndoPrimitive">
            <summary>Sets the stub of ITextUndoPrimitive.Merge(ITextUndoPrimitive older)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#CanMerge(Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive)">
            <summary>Sets the stub of ITextUndoPrimitive.CanMerge(ITextUndoPrimitive older)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#Do">
            <summary>Sets the stub of ITextUndoPrimitive.Do()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#Merge(Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive)">
            <summary>Sets the stub of ITextUndoPrimitive.Merge(ITextUndoPrimitive older)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#Undo">
            <summary>Sets the stub of ITextUndoPrimitive.Undo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.ParentGet">
            <summary>Sets the stub of ITextUndoPrimitive.get_Parent()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.ParentSetITextUndoTransaction">
            <summary>Sets the stub of ITextUndoPrimitive.set_Parent(ITextUndoTransaction value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.Undo">
            <summary>Sets the stub of ITextUndoPrimitive.Undo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#CanRedo">
            <summary>Sets the stub of ITextUndoPrimitive.get_CanRedo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#CanUndo">
            <summary>Sets the stub of ITextUndoPrimitive.get_CanUndo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoPrimitive.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoPrimitive#Parent">
            <summary>Sets the stub of ITextUndoPrimitive.get_Parent()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.#ctor">
            <summary>Initializes a new instance of type StubITextUndoTransaction</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.AddUndoITextUndoPrimitive">
            <summary>Sets the stub of ITextUndoTransaction.AddUndo(ITextUndoPrimitive undo)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubITextUndoTransaction.Description as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.AttachBackingFieldToMergePolicy">
            <summary>Attaches delegates to emulate StubITextUndoTransaction.MergePolicy as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.CanRedoGet">
            <summary>Sets the stub of ITextUndoTransaction.get_CanRedo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.CanUndoGet">
            <summary>Sets the stub of ITextUndoTransaction.get_CanUndo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.Cancel">
            <summary>Sets the stub of ITextUndoTransaction.Cancel()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.Complete">
            <summary>Sets the stub of ITextUndoTransaction.Complete()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.DescriptionGet">
            <summary>Sets the stub of ITextUndoTransaction.get_Description()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.DescriptionSetString">
            <summary>Sets the stub of ITextUndoTransaction.set_Description(String value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.Do">
            <summary>Sets the stub of ITextUndoTransaction.Do()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.HistoryGet">
            <summary>Sets the stub of ITextUndoTransaction.get_History()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.MergePolicyGet">
            <summary>Sets the stub of ITextUndoTransaction.get_MergePolicy()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.MergePolicySetIMergeTextUndoTransactionPolicy">
            <summary>Sets the stub of ITextUndoTransaction.set_MergePolicy(IMergeTextUndoTransactionPolicy value)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#AddUndo(Microsoft.VisualStudio.Text.Operations.ITextUndoPrimitive)">
            <summary>Sets the stub of ITextUndoTransaction.AddUndo(ITextUndoPrimitive undo)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#Cancel">
            <summary>Sets the stub of ITextUndoTransaction.Cancel()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#Complete">
            <summary>Sets the stub of ITextUndoTransaction.Complete()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#Do">
            <summary>Sets the stub of ITextUndoTransaction.Do()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#Undo">
            <summary>Sets the stub of ITextUndoTransaction.Undo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.ParentGet">
            <summary>Sets the stub of ITextUndoTransaction.get_Parent()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.StateGet">
            <summary>Sets the stub of ITextUndoTransaction.get_State()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.Undo">
            <summary>Sets the stub of ITextUndoTransaction.Undo()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.UndoPrimitivesGet">
            <summary>Sets the stub of ITextUndoTransaction.get_UndoPrimitives()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#CanRedo">
            <summary>Sets the stub of ITextUndoTransaction.get_CanRedo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#CanUndo">
            <summary>Sets the stub of ITextUndoTransaction.get_CanUndo()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#Description">
            <summary>Sets the stub of ITextUndoTransaction.get_Description()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#History">
            <summary>Sets the stub of ITextUndoTransaction.get_History()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#MergePolicy">
            <summary>Sets the stub of ITextUndoTransaction.get_MergePolicy()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#Parent">
            <summary>Sets the stub of ITextUndoTransaction.get_Parent()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#State">
            <summary>Sets the stub of ITextUndoTransaction.get_State()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubITextUndoTransaction.mvstl::Microsoft#VisualStudio#Text#Operations#ITextUndoTransaction#UndoPrimitives">
            <summary>Sets the stub of ITextUndoTransaction.get_UndoPrimitives()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoRedoEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.TextUndoRedoEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoRedoEventArgs.#ctor(Microsoft.VisualStudio.Text.Operations.TextUndoHistoryState,Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoRedoEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTextUndoRedoEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoRedoEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoRedoEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoRedoEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoTransactionCompletedEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoTransactionCompletedEventArgs.#ctor(Microsoft.VisualStudio.Text.Operations.ITextUndoTransaction,Microsoft.VisualStudio.Text.Operations.TextUndoTransactionCompletionResult)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoTransactionCompletedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTextUndoTransactionCompletedEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoTransactionCompletedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoTransactionCompletedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Operations.Fakes.StubTextUndoTransactionCompletedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.BatchedTagsChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Tagging.BatchedTagsChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.ConstructorIListOfIMappingSpan">
            <summary>Sets the shim of BatchedTagsChangedEventArgs.BatchedTagsChangedEventArgs(IList`1&lt;IMappingSpan&gt; spans)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.SpansGet">
            <summary>Sets the shim of BatchedTagsChangedEventArgs.get_Spans()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimBatchedTagsChangedEventArgs.AllInstances.SpansGet">
            <summary>Sets the shim of BatchedTagsChangedEventArgs.get_Spans()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.ClassificationTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.#ctor(Microsoft.VisualStudio.Text.Tagging.ClassificationTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.Bind(Microsoft.VisualStudio.Text.Tagging.IClassificationTag)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.Bind(Microsoft.VisualStudio.Text.Tagging.ITag)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.ClassificationTypeGet">
            <summary>Sets the shim of ClassificationTag.get_ClassificationType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.ClassificationTypeSetIClassificationType">
            <summary>Sets the shim of ClassificationTag.set_ClassificationType(IClassificationType value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.ConstructorIClassificationType">
            <summary>Sets the shim of ClassificationTag.ClassificationTag(IClassificationType type)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.AllInstances.ClassificationTypeGet">
            <summary>Sets the shim of ClassificationTag.get_ClassificationType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimClassificationTag.AllInstances.ClassificationTypeSetIClassificationType">
            <summary>Sets the shim of ClassificationTag.set_ClassificationType(IClassificationType value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.MappingTagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.#ctor(Microsoft.VisualStudio.Text.Tagging.MappingTagSpan{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.Bind(Microsoft.VisualStudio.Text.Tagging.IMappingTagSpan{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.ConstructorIMappingSpanT0">
            <summary>Sets the shim of MappingTagSpan`1.MappingTagSpan`1(IMappingSpan span, !0 tag)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.SpanGet">
            <summary>Sets the shim of MappingTagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.SpanSetIMappingSpan">
            <summary>Sets the shim of MappingTagSpan`1.set_Span(IMappingSpan value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.TagGet">
            <summary>Sets the shim of MappingTagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.TagSetT0">
            <summary>Sets the shim of MappingTagSpan`1.set_Tag(!0 value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.AllInstances.SpanGet">
            <summary>Sets the shim of MappingTagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.AllInstances.SpanSetIMappingSpan">
            <summary>Sets the shim of MappingTagSpan`1.set_Span(IMappingSpan value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.AllInstances.TagGet">
            <summary>Sets the shim of MappingTagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimMappingTagSpan`1.AllInstances.TagSetT0">
            <summary>Sets the shim of MappingTagSpan`1.set_Tag(!0 value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.#ctor(Microsoft.VisualStudio.Text.Tagging.SimpleTagger{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.Bind(Microsoft.VisualStudio.Text.Tagging.ITagger{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.ConstructorITextBuffer">
            <summary>Sets the shim of SimpleTagger`1.SimpleTagger`1(ITextBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.CreateTagSpanITrackingSpanT0">
            <summary>Sets the shim of SimpleTagger`1.CreateTagSpan(ITrackingSpan span, !0 tag)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.EndBatch">
            <summary>Sets the shim of SimpleTagger`1.EndBatch()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.GetTaggedSpansSnapshotSpan">
            <summary>Sets the shim of SimpleTagger`1.GetTaggedSpans(SnapshotSpan span)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.GetTagsNormalizedSnapshotSpanCollection">
            <summary>Sets the shim of SimpleTagger`1.GetTags(NormalizedSnapshotSpanCollection spans)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.RemoveTagSpanTrackingTagSpanOfT0">
            <summary>Sets the shim of SimpleTagger`1.RemoveTagSpan(TrackingTagSpan`1&lt;!0&gt; tagSpan)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.RemoveTagSpansPredicateOfTrackingTagSpanOfT0">
            <summary>Sets the shim of SimpleTagger`1.RemoveTagSpans(Predicate`1&lt;TrackingTagSpan`1&lt;!0&gt;&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.StartBatch">
            <summary>Sets the shim of SimpleTagger`1.StartBatch()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.TagsChangedAddEventHandlerOfSnapshotSpanEventArgs">
            <summary>Sets the shim of SimpleTagger`1.add_TagsChanged(EventHandler`1&lt;SnapshotSpanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.TagsChangedRemoveEventHandlerOfSnapshotSpanEventArgs">
            <summary>Sets the shim of SimpleTagger`1.remove_TagsChanged(EventHandler`1&lt;SnapshotSpanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.Update">
            <summary>Sets the shim of SimpleTagger`1.Update()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.UpdateBatchSpanITrackingSpan">
            <summary>Sets the shim of SimpleTagger`1.UpdateBatchSpan(ITrackingSpan snapshotSpan)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.CreateTagSpanITrackingSpanT0">
            <summary>Sets the shim of SimpleTagger`1.CreateTagSpan(ITrackingSpan span, !0 tag)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.EndBatch">
            <summary>Sets the shim of SimpleTagger`1.EndBatch()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.GetTaggedSpansSnapshotSpan">
            <summary>Sets the shim of SimpleTagger`1.GetTaggedSpans(SnapshotSpan span)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.GetTagsNormalizedSnapshotSpanCollection">
            <summary>Sets the shim of SimpleTagger`1.GetTags(NormalizedSnapshotSpanCollection spans)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.RemoveTagSpanTrackingTagSpanOfT0">
            <summary>Sets the shim of SimpleTagger`1.RemoveTagSpan(TrackingTagSpan`1&lt;!0&gt; tagSpan)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.RemoveTagSpansPredicateOfTrackingTagSpanOfT0">
            <summary>Sets the shim of SimpleTagger`1.RemoveTagSpans(Predicate`1&lt;TrackingTagSpan`1&lt;!0&gt;&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.StartBatch">
            <summary>Sets the shim of SimpleTagger`1.StartBatch()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.TagsChangedAddEventHandlerOfSnapshotSpanEventArgs">
            <summary>Sets the shim of SimpleTagger`1.add_TagsChanged(EventHandler`1&lt;SnapshotSpanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.TagsChangedRemoveEventHandlerOfSnapshotSpanEventArgs">
            <summary>Sets the shim of SimpleTagger`1.remove_TagsChanged(EventHandler`1&lt;SnapshotSpanEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.Update">
            <summary>Sets the shim of SimpleTagger`1.Update()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimSimpleTagger`1.AllInstances.UpdateBatchSpanITrackingSpan">
            <summary>Sets the shim of SimpleTagger`1.UpdateBatchSpan(ITrackingSpan snapshotSpan)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.TagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.#ctor(Microsoft.VisualStudio.Text.Tagging.TagSpan{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.Bind(Microsoft.VisualStudio.Text.Tagging.ITagSpan{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.ConstructorSnapshotSpanT0">
            <summary>Sets the shim of TagSpan`1.TagSpan`1(SnapshotSpan span, !0 tag)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.SpanGet">
            <summary>Sets the shim of TagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.SpanSetSnapshotSpan">
            <summary>Sets the shim of TagSpan`1.set_Span(SnapshotSpan value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.TagGet">
            <summary>Sets the shim of TagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.TagSetT0">
            <summary>Sets the shim of TagSpan`1.set_Tag(!0 value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.AllInstances.SpanGet">
            <summary>Sets the shim of TagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.AllInstances.SpanSetSnapshotSpan">
            <summary>Sets the shim of TagSpan`1.set_Span(SnapshotSpan value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.AllInstances.TagGet">
            <summary>Sets the shim of TagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagSpan`1.AllInstances.TagSetT0">
            <summary>Sets the shim of TagSpan`1.set_Tag(!0 value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.TagTypeAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.#ctor(Microsoft.VisualStudio.Text.Tagging.TagTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.ConstructorType">
            <summary>Sets the shim of TagTypeAttribute.TagTypeAttribute(Type tagType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.TagTypesGet">
            <summary>Sets the shim of TagTypeAttribute.get_TagTypes()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagTypeAttribute.AllInstances.TagTypesGet">
            <summary>Sets the shim of TagTypeAttribute.get_TagTypes()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.ConstructorIMappingSpan">
            <summary>Sets the shim of TagsChangedEventArgs.TagsChangedEventArgs(IMappingSpan span)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.SpanGet">
            <summary>Sets the shim of TagsChangedEventArgs.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.SpanSetIMappingSpan">
            <summary>Sets the shim of TagsChangedEventArgs.set_Span(IMappingSpan value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.AllInstances.SpanGet">
            <summary>Sets the shim of TagsChangedEventArgs.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTagsChangedEventArgs.AllInstances.SpanSetIMappingSpan">
            <summary>Sets the shim of TagsChangedEventArgs.set_Span(IMappingSpan value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.#ctor(Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.ConstructorITrackingSpanT0">
            <summary>Sets the shim of TrackingTagSpan`1.TrackingTagSpan`1(ITrackingSpan span, !0 tag)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.SpanGet">
            <summary>Sets the shim of TrackingTagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.SpanSetITrackingSpan">
            <summary>Sets the shim of TrackingTagSpan`1.set_Span(ITrackingSpan value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.TagGet">
            <summary>Sets the shim of TrackingTagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.TagSetT0">
            <summary>Sets the shim of TrackingTagSpan`1.set_Tag(!0 value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.AllInstances.SpanGet">
            <summary>Sets the shim of TrackingTagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.AllInstances.SpanSetITrackingSpan">
            <summary>Sets the shim of TrackingTagSpan`1.set_Span(ITrackingSpan value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.AllInstances.TagGet">
            <summary>Sets the shim of TrackingTagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimTrackingTagSpan`1.AllInstances.TagSetT0">
            <summary>Sets the shim of TrackingTagSpan`1.set_Tag(!0 value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag">
            <summary>Shim type of Microsoft.VisualStudio.Text.Tagging.UrlTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.#ctor(Microsoft.VisualStudio.Text.Tagging.UrlTag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.Bind(Microsoft.VisualStudio.Text.Tagging.ITag)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.Bind(Microsoft.VisualStudio.Text.Tagging.IUrlTag)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.ConstructorUri">
            <summary>Sets the shim of UrlTag.UrlTag(Uri url)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.UrlGet">
            <summary>Sets the shim of UrlTag.get_Url()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.UrlSetUri">
            <summary>Sets the shim of UrlTag.set_Url(Uri value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.AllInstances.UrlGet">
            <summary>Sets the shim of UrlTag.get_Url()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.ShimUrlTag.AllInstances.UrlSetUri">
            <summary>Sets the shim of UrlTag.set_Url(Uri value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubBatchedTagsChangedEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.BatchedTagsChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubBatchedTagsChangedEventArgs.#ctor(System.Collections.Generic.IList{Microsoft.VisualStudio.Text.IMappingSpan})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubBatchedTagsChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubBatchedTagsChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubBatchedTagsChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubBatchedTagsChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubBatchedTagsChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubClassificationTag">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.ClassificationTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubClassificationTag.#ctor(Microsoft.VisualStudio.Text.Classification.IClassificationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubClassificationTag.InitializeStub">
            <summary>Initializes a new instance of type StubClassificationTag</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubClassificationTag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubClassificationTag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubClassificationTag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIBufferTagAggregatorFactoryService">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.IBufferTagAggregatorFactoryService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIBufferTagAggregatorFactoryService.#ctor">
            <summary>Initializes a new instance of type StubIBufferTagAggregatorFactoryService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIBufferTagAggregatorFactoryService.CreateTagAggregatorOf1ITextBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Tagging.ITagAggregator{``0}})">
            <summary>Sets stubs of CreateTagAggregator(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIBufferTagAggregatorFactoryService.CreateTagAggregatorOf1ITextBufferTagAggregatorOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Tagging.TagAggregatorOptions,Microsoft.VisualStudio.Text.Tagging.ITagAggregator{``0}})">
            <summary>Sets stubs of CreateTagAggregator(ITextBuffer textBuffer, TagAggregatorOptions options)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIBufferTagAggregatorFactoryService.mvstl::Microsoft#VisualStudio#Text#Tagging#IBufferTagAggregatorFactoryService#CreateTagAggregator``1(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of IBufferTagAggregatorFactoryService.CreateTagAggregator(ITextBuffer textBuffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIBufferTagAggregatorFactoryService.mvstl::Microsoft#VisualStudio#Text#Tagging#IBufferTagAggregatorFactoryService#CreateTagAggregator``1(Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Tagging.TagAggregatorOptions)">
            <summary>Sets the stub of IBufferTagAggregatorFactoryService.CreateTagAggregator(ITextBuffer textBuffer, TagAggregatorOptions options)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIClassificationTag">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.IClassificationTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIClassificationTag.#ctor">
            <summary>Initializes a new instance of type StubIClassificationTag</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIClassificationTag.ClassificationTypeGet">
            <summary>Sets the stub of IClassificationTag.get_ClassificationType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIClassificationTag.mvstl::Microsoft#VisualStudio#Text#Tagging#IClassificationTag#ClassificationType">
            <summary>Sets the stub of IClassificationTag.get_ClassificationType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIMappingTagSpan`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.IMappingTagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIMappingTagSpan`1.#ctor">
            <summary>Initializes a new instance of type StubIMappingTagSpan</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIMappingTagSpan`1.SpanGet">
            <summary>Sets the stub of IMappingTagSpan`1.get_Span()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIMappingTagSpan`1.TagGet">
            <summary>Sets the stub of IMappingTagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIMappingTagSpan`1.mvstl::Microsoft#VisualStudio#Text#Tagging#IMappingTagSpan{T}#Span">
            <summary>Sets the stub of IMappingTagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIMappingTagSpan`1.mvstl::Microsoft#VisualStudio#Text#Tagging#IMappingTagSpan{T}#Tag">
            <summary>Sets the stub of IMappingTagSpan`1.get_Tag()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITag">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.ITag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITag.#ctor">
            <summary>Initializes a new instance of type StubITag</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.ITagAggregator`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.#ctor">
            <summary>Initializes a new instance of type StubITagAggregator</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.BufferGraphGet">
            <summary>Sets the stub of ITagAggregator`1.get_BufferGraph()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.GetTagsIMappingSpan">
            <summary>Sets the stub of ITagAggregator`1.GetTags(IMappingSpan span)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.GetTagsNormalizedSnapshotSpanCollection">
            <summary>Sets the stub of ITagAggregator`1.GetTags(NormalizedSnapshotSpanCollection snapshotSpans)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.GetTagsSnapshotSpan">
            <summary>Sets the stub of ITagAggregator`1.GetTags(SnapshotSpan span)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagAggregator{T}#GetTags(Microsoft.VisualStudio.Text.IMappingSpan)">
            <summary>Sets the stub of ITagAggregator`1.GetTags(IMappingSpan span)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagAggregator{T}#GetTags(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>Sets the stub of ITagAggregator`1.GetTags(SnapshotSpan span)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagAggregator{T}#GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
            <summary>Sets the stub of ITagAggregator`1.GetTags(NormalizedSnapshotSpanCollection snapshotSpans)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagAggregator`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagAggregator{T}#BufferGraph">
            <summary>Sets the stub of ITagAggregator`1.get_BufferGraph()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagSpan`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.ITagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagSpan`1.#ctor">
            <summary>Initializes a new instance of type StubITagSpan</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagSpan`1.SpanGet">
            <summary>Sets the stub of ITagSpan`1.get_Span()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagSpan`1.TagGet">
            <summary>Sets the stub of ITagSpan`1.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagSpan`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagSpan{T}#Span">
            <summary>Sets the stub of ITagSpan`1.get_Span()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagSpan`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagSpan{T}#Tag">
            <summary>Sets the stub of ITagSpan`1.get_Tag()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagger`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.ITagger`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagger`1.#ctor">
            <summary>Initializes a new instance of type StubITagger</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagger`1.GetTagsNormalizedSnapshotSpanCollection">
            <summary>Sets the stub of ITagger`1.GetTags(NormalizedSnapshotSpanCollection spans)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITagger`1.mvstl::Microsoft#VisualStudio#Text#Tagging#ITagger{T}#GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
            <summary>Sets the stub of ITagger`1.GetTags(NormalizedSnapshotSpanCollection spans)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITaggerProvider">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.ITaggerProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITaggerProvider.#ctor">
            <summary>Initializes a new instance of type StubITaggerProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITaggerProvider.CreateTaggerOf1ITextBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.Text.ITextBuffer,Microsoft.VisualStudio.Text.Tagging.ITagger{``0}})">
            <summary>Sets stubs of CreateTagger(ITextBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubITaggerProvider.mvstl::Microsoft#VisualStudio#Text#Tagging#ITaggerProvider#CreateTagger``1(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Sets the stub of ITaggerProvider.CreateTagger(ITextBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIUrlTag">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.IUrlTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIUrlTag.#ctor">
            <summary>Initializes a new instance of type StubIUrlTag</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIUrlTag.UrlGet">
            <summary>Sets the stub of IUrlTag.get_Url()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubIUrlTag.mvstl::Microsoft#VisualStudio#Text#Tagging#IUrlTag#Url">
            <summary>Sets the stub of IUrlTag.get_Url()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubMappingTagSpan`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.MappingTagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubMappingTagSpan`1.#ctor(Microsoft.VisualStudio.Text.IMappingSpan,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubMappingTagSpan`1.InitializeStub">
            <summary>Initializes a new instance of type StubMappingTagSpan</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubMappingTagSpan`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubMappingTagSpan`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubMappingTagSpan`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubSimpleTagger`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.SimpleTagger`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubSimpleTagger`1.#ctor(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubSimpleTagger`1.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleTagger</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubSimpleTagger`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubSimpleTagger`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubSimpleTagger`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagSpan`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.TagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagSpan`1.#ctor(Microsoft.VisualStudio.Text.SnapshotSpan,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagSpan`1.InitializeStub">
            <summary>Initializes a new instance of type StubTagSpan</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagSpan`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagSpan`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagSpan`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagsChangedEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.TagsChangedEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagsChangedEventArgs.#ctor(Microsoft.VisualStudio.Text.IMappingSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagsChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTagsChangedEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagsChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagsChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTagsChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTrackingTagSpan`1">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.TrackingTagSpan`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTrackingTagSpan`1.#ctor(Microsoft.VisualStudio.Text.ITrackingSpan,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTrackingTagSpan`1.InitializeStub">
            <summary>Initializes a new instance of type StubTrackingTagSpan</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTrackingTagSpan`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTrackingTagSpan`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubTrackingTagSpan`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.Tagging.Fakes.StubUrlTag">
            <summary>Stub type of Microsoft.VisualStudio.Text.Tagging.UrlTag</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubUrlTag.#ctor(System.Uri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.Tagging.Fakes.StubUrlTag.InitializeStub">
            <summary>Initializes a new instance of type StubUrlTag</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubUrlTag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubUrlTag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Text.Tagging.Fakes.StubUrlTag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
