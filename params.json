{"name":"Commentator","tagline":"Bringing a first-class comment experience to Visual Studio","body":"# Commentator\r\n\r\n_Bringing a first-class comment experience to Visual Studio._\r\n\r\n## Why another comment extension?\r\n\r\nThere are already several comment-formatting extensions for Visual Studio:\r\n[CommentsPlus](http://visualstudiogallery.msdn.microsoft.com/f76e86e3-03ca-4ac8-ba88-58c8f8d818f4),\r\n[redmuffin.MultiAdornment](http://visualstudiogallery.msdn.microsoft.com/03e958d5-66a5-4947-9d5e-334766cc5877),\r\n[JR Keywords](http://visualstudiogallery.msdn.microsoft.com/a99a9ef0-aba2-4948-a74e-abbc0d1a7daa),\r\n[DoxygenComments](http://visualstudiogallery.msdn.microsoft.com/11a30c1c-593b-4399-a702-f23a56dd8548),\r\n[VS10x Comments Extender](http://visualstudiogallery.msdn.microsoft.com/17c68951-7743-40bd-ad35-608706f54a92),\r\n[SharpComments](http://visualstudiogallery.msdn.microsoft.com/32b91d27-2a0f-4a4b-9ad3-caed8b4ced4b),\r\nand others, I'm sure.  Most of these provide some basic additional handling for\r\ncomments by using a leading character to provide different formatting.\r\n\r\nCommontator, on the other hand, seeks to make writing and updating comments a\r\nmuch more natural and useful experience.  What if the process of writing or\r\nediting comments felt more like using Word?  If adding a word or two in the\r\nmiddle of a comment didn't mean deciding between jaggedly uneven line lengths\r\nor manually reflowing to the next line (and the next, and the next).  What if\r\nyou didn't have to pay any attention to which column you were in, because what\r\nyou type automatically moves to the next line as needed?\r\n\r\nWelcome to Commentator.\r\n\r\n## Roadmap (roughly)\r\n\r\n * Auto-wrap comments as they are typed\r\n\r\n  * whitespace-separated words wrap on or before the line-length limit\r\n\r\n  * if the next line starts with a matching comment delimiter (same whitespace\r\n    before and after the \"//\") the word is injected into the beginning of the\r\n    line and that line is also wrapped\r\n\r\n * DocComment formatting\r\n\r\n  * more than just the DocComment tags, the entire comment block is formatted\r\n    to look like the MSDN-style documentation pages\r\n\r\n  * this _might_ include bringing in type/parameter/name information from the\r\n    related code\r\n\r\n  * support images in DocComments?  (and maybe elsewhere?)\r\n\r\n * also support prefix-based formatting (+, ++, !, ?, etc.?)\r\n\r\n * also support limited markdown formatting?\r\n\r\n * perhaps make multi-line (\"//\", \"//\" or \"/*...*/\") comments look like blocks\r\n   a la DocComments (above)?\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}